qqPlot(dim_bind$log_volume_pg, dist="norm")
qqPlot(dim_bind$log_volume_field, dist="norm")
par(mfrow=c(1,1))
par(mfrow=c(3,3))
qqPlot(dim_bind$height_pg, dist="norm")
qqPlot(dim_bind$height_field, dist="norm")
qqPlot(dim_bind$length_pg, dist="norm")
qqPlot(dim_bind$length_field, dist="norm")
qqPlot(dim_bind$width_pg, dist="norm")
qqPlot(dim_bind$width_field, dist="norm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
qqPlot(dim_bind$volume_pg, dist="norm")
qqPlot(dim_bind$volume_field, dist="norm")
par(mfrow=c(1,1))
#Volume data is not normal, try log transformation
dim_bind$log_volume_pg <- sqrt(dim_bind$volume_pg)
dim_bind$log_volume_field <- sqrt(dim_bind$volume_field)
par(mfrow=c(2,2))
qqPlot(dim_bind$log_volume_pg, dist="norm")
qqPlot(dim_bind$log_volume_field, dist="norm")
par(mfrow=c(1,1))
par(mfrow=c(3,3))
qqPlot(dim_bind$height_pg, dist="norm")
qqPlot(dim_bind$height_field, dist="norm")
qqPlot(dim_bind$length_pg, dist="norm")
qqPlot(dim_bind$length_field, dist="norm")
qqPlot(dim_bind$width_pg, dist="norm")
qqPlot(dim_bind$width_field, dist="norm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
qqPlot(dim_bind$volume_pg, dist="norm")
qqPlot(dim_bind$volume_field, dist="norm")
par(mfrow=c(1,1))
#Volume data is not normal, try sqrt transformation
dim_bind$sqrt_volume_pg <- sqrt(dim_bind$volume_pg)
dim_bind$sqrt_volume_field <- sqrt(dim_bind$volume_field)
par(mfrow=c(2,2))
qqPlot(dim_bind$sqrt_volume_pg, dist="norm")
qqPlot(dim_bind$sqrt_volume_field, dist="norm")
par(mfrow=c(1,1))
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE)
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
view(dim_bind)
dim_pg <- coral_pg %>%
dplyr::select(coral_id, height_pg, length_pg, width_pg, volume_pg) %>%
mutate(height_pg = height_pg*100,
length_pg = length_pg*100,
width_pg = width_pg*100,
volume_pg = volume_pg*10^6)
dim_field <- coral_field %>%
dplyr::select(coral_id, height_field, length_field, width_field, volume_field)
dim_bind <- merge(dim_pg, dim_field, by="coral_id") %>%
drop_na()
view(dim_bind)
dim_pg <- coral_pg %>%
dplyr::select(coral_id, height_pg, length_pg, width_pg, volume_pg) %>%
mutate(height_pg = height_pg*100,
length_pg = length_pg*100,
width_pg = width_pg*100,
volume_pg = volume_pg*10^6)
dim_field <- coral_field %>%
dplyr::select(coral_id, height_field, length_field, width_field, volume_field)
dim_bind1 <- merge(dim_pg, dim_field, by="coral_id") %>%
drop_na()
dim_bind2 <- merge(dim_pg, dim_field, by="coral_id")
view(dim_bind2)
view(dim_bind1)
dim_pg <- coral_pg %>%
dplyr::select(coral_id, height_pg, length_pg, width_pg, volume_pg) %>%
mutate(height_pg = height_pg*100,
length_pg = length_pg*100,
width_pg = width_pg*100,
volume_pg = volume_pg*10^6)
dim_field <- coral_field %>%
dplyr::select(coral_id, height_field, length_field, width_field, volume_field)
dim_bind1 <- merge(dim_pg, dim_field, by="coral_id") %>%
drop_na()
par(mfrow=c(3,3))
qqPlot(dim_bind$height_pg, dist="norm")
qqPlot(dim_bind$height_field, dist="norm")
qqPlot(dim_bind$length_pg, dist="norm")
qqPlot(dim_bind$length_field, dist="norm")
qqPlot(dim_bind$width_pg, dist="norm")
qqPlot(dim_bind$width_field, dist="norm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
qqPlot(dim_bind$volume_pg, dist="norm")
qqPlot(dim_bind$volume_field, dist="norm")
par(mfrow=c(1,1))
#Volume data is not normal, try sqrt transformation
dim_bind$sqrt_volume_pg <- sqrt(dim_bind$volume_pg)
dim_bind$sqrt_volume_field <- sqrt(dim_bind$volume_field)
par(mfrow=c(2,2))
qqPlot(dim_bind$sqrt_volume_pg, dist="norm")
qqPlot(dim_bind$sqrt_volume_field, dist="norm")
par(mfrow=c(1,1))
#sqrt transformed volume for both measurements is normal, move to paired t-test
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
dim_pg <- coral_pg %>%
dplyr::select(coral_id, height_pg, length_pg, width_pg, volume_pg) %>%
mutate(height_pg = height_pg*100,
length_pg = length_pg*100,
width_pg = width_pg*100,
volume_pg = volume_pg*10^6)
dim_field <- coral_field %>%
dplyr::select(coral_id, height_field, length_field, width_field, volume_field)
dim_bind <- merge(dim_pg, dim_field, by="coral_id") %>%
drop_na()
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
par(mfrow=c(3,3))
qqPlot(dim_bind$height_pg, dist="norm")
qqPlot(dim_bind$height_field, dist="norm")
qqPlot(dim_bind$length_pg, dist="norm")
qqPlot(dim_bind$length_field, dist="norm")
qqPlot(dim_bind$width_pg, dist="norm")
qqPlot(dim_bind$width_field, dist="norm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
qqPlot(dim_bind$volume_pg, dist="norm")
qqPlot(dim_bind$volume_field, dist="norm")
par(mfrow=c(1,1))
#Volume data is not normal, try sqrt transformation
dim_bind$sqrt_volume_pg <- sqrt(dim_bind$volume_pg)
dim_bind$sqrt_volume_field <- sqrt(dim_bind$volume_field)
par(mfrow=c(2,2))
qqPlot(dim_bind$sqrt_volume_pg, dist="norm")
qqPlot(dim_bind$sqrt_volume_field, dist="norm")
par(mfrow=c(1,1))
#sqrt transformed volume for both measurements is normal, move to paired t-test
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
dim_pg <- coral_pg %>%
dplyr::select(coral_id, height_pg, length_pg, width_pg, volume_pg) %>%
mutate(height_pg = height_pg*100,
length_pg = length_pg*100,
width_pg = width_pg*100,
volume_pg = volume_pg*10^6)
dim_field <- coral_field %>%
dplyr::select(coral_id, height_field, length_field, width_field, volume_field)
dim_bind <- merge(dim_pg, dim_field, by="coral_id") %>%
drop_na()
par(mfrow=c(3,3))
qqPlot(dim_bind$height_pg, dist="norm")
qqPlot(dim_bind$height_field, dist="norm")
qqPlot(dim_bind$length_pg, dist="norm")
qqPlot(dim_bind$length_field, dist="norm")
qqPlot(dim_bind$width_pg, dist="norm")
qqPlot(dim_bind$width_field, dist="norm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
qqPlot(dim_bind$volume_pg, dist="norm")
qqPlot(dim_bind$volume_field, dist="norm")
par(mfrow=c(1,1))
#Volume data is not normal, try sqrt transformation
dim_bind$sqrt_volume_pg <- sqrt(dim_bind$volume_pg)
dim_bind$sqrt_volume_field <- sqrt(dim_bind$volume_field)
par(mfrow=c(2,2))
qqPlot(dim_bind$sqrt_volume_pg, dist="norm")
qqPlot(dim_bind$sqrt_volume_field, dist="norm")
par(mfrow=c(1,1))
#sqrt transformed volume for both measurements is normal, move to paired t-test
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
coral_pg <- read.csv(here("photogrammetry_data/galvan_journ_datasheet_v2.csv"))
coral_field <- read.csv(here("photogrammetry_data/field_experiment_colony_measurements_moorea_summer2019.csv"))
cafi_surveys <- read.csv(here("cafi_data/revised_cafi_data_moorea_summer2019_11_27.csv"))
cafi_field <- read.csv(here("cafi_data/prelim_cafi_counts_moorea_summer2019.csv"))
updated_cafi <- read.csv(here("cafi_data/cafi_data_w_taxonomy_summer2019_2020_5_21.csv"))
#Incorporate cleaned CAFI data
updated_cafi2 <- updated_cafi %>% filter(str_detect(coral_id, "^FE")) %>%
dplyr::select(master_sort, coral_id, code, type, search_term, lowest_level, phylum, genus, species, general_notes) %>%
subset(phylum!="Chordata")
#Calculate CAFI richness, abundance, and diversity (shannon weiner) for each coral
cafi_summarized2 <- group_by(updated_cafi2, coral_id) %>%
summarise(num_cafi = n(), cafi_richness = length(unique(code)), cafi_present = paste(sort(unique(code)), collapse = ";"))
cafi_summarized2$sw <- updated_cafi2 %>%
count(code, coral_id = coral_id) %>%
spread(code,n) %>%
mutate_all(list(~tidyr::replace_na(.,0))) %>%
dplyr::select(-coral_id) %>%
diversity(index = "shannon")
### Incorporate coral data
# Clean field data
coral_field2 <- coral_field %>%
dplyr::rename(branch = branch_width)
# Clean photogrammetry morphometric data
coral_pg$volume_pg <- as.numeric(as.character(coral_pg$volume_pg)) # Convert factor to numeric
# Clean photogrammetry branch width data and take averages of branch distance for each coral
branch_width$branch_distance_mm <- as.numeric(as.character(branch_width$branch_distance_mm)) # Convert factor to numeric
branch_w_summarized <- group_by(branch_width, coral_id) %>%
summarise(avg_w_cm = sum(branch_distance_mm/10)/n(), #take average branch distance and convert mm to cm
measurements = length(unique(replicate_measurement)),
locations = paste(sort(unique(location)), collapse = ";"))
#Create dataframe called coral_dim
coral_dim <- merge(coral_pg, branch_w_summarized, by = "coral_id") %>%
merge(coral_field2, by = "coral_id") %>%
mutate(volume_pg=volume_pg*10^6,
max_hull_volume=max_hull_volume*10^6, #convert m^3 to cm^3
max_hull_surface_area=max_hull_surface_area*10^4,
surface_area=surface_area*10^4) %>%   #convert m^2 to cm^2
dplyr::rename(max_hull_SA = max_hull_surface_area,
SA = surface_area)
coral_dim$interstitial_space <- coral_dim$max_hull_volume - coral_dim$volume_pg #calculate available space by subtracting software estimated volume from convex hull volume
coral_dim$SAV <- coral_dim$SA / coral_dim$volume_pg #calculate surface area to volume relationship
coral_dim$convexity <- coral_dim$volume_pg / coral_dim$max_hull_volume #calculate proportion occupied, high ratios indicate less free space between branches
coral_dim$packing <- coral_dim$SA / coral_dim$max_hull_SA #how much of an objects surface area is situated internally
coral_dim$sphericity <- ((3.14^(1/3))*((6*coral_dim$volume_pg)^(2/3)))/coral_dim$SA #calculate sphericity or how close the object is to a sphere
coral_dim <- coral_dim %>%
dplyr::select(coral_id, branch, cafi, size_class, volume_field, volume_pg, SA, avg_w_cm, interstitial_space, SAV, convexity, packing, sphericity) %>%
filter(cafi=="empty")
coral_dim$branch <- ifelse(coral_dim$convexity>=0.5, "tight","wide") #classifies wide and tight branching coral based on convexity measurement
#Create dataframe called cafi_coral and merge coral and cafi data
cafi_coral <- merge(cafi_summarized2, coral_dim, by ="coral_id") %>%
drop_na(interstitial_space) %>%
dplyr::select(coral_id, branch, cafi, size_class, volume_field, volume_pg, SA, avg_w_cm, interstitial_space, SAV, convexity, packing, sphericity, num_cafi, cafi_present, cafi_richness, sw)
#Log transform variables
cafi_coral$log_num_cafi <- log(cafi_coral$num_cafi)
cafi_coral$log_volume_field <- log(cafi_coral$volume_field)
cafi_coral$log_volume_pg <- log(cafi_coral$volume_pg)
cafi_coral$log_avg_w <- log(cafi_coral$avg_w_cm)
cafi_coral$log_interstitial_space <- log(cafi_coral$interstitial_space)
cafi_coral$log_SA <- log(cafi_coral$SA)
cafi_coral$log_cafi_richness <- log(cafi_coral$cafi_richness)
cafi_coral$log_sphericity <- log(cafi_coral$sphericity)
#Sqrt transform variables
cafi_coral$sqrt_num_cafi <- sqrt(cafi_coral$num_cafi)
cafi_coral$sqrt_volume_pg <- sqrt(cafi_coral$volume_pg)
cafi_coral$sqrt_interstitial_space <- sqrt(cafi_coral$interstitial_space)
cafi_coral$sqrt_SA <- sqrt(cafi_coral$SA)
cafi_coral$sqrt_cafi_richness <- sqrt(cafi_coral$cafi_richness)
cafi_coral$sqrt_sphericity <- sqrt(cafi_coral$sphericity)
#Visualize correlations between variables
cor_var <- cafi_coral %>%
dplyr::select(num_cafi,volume_pg,volume_field,SA,avg_w_cm,interstitial_space,sphericity,convexity,packing)
pairs.panels(cor_var,
method="pearson",
hist.col = "white",
density=TRUE,
ellipses=FALSE)
#Use log transformed data
cor_var2 <- cafi_coral %>%
dplyr::select(log_num_cafi,log_volume_pg,log_volume_field,log_SA,log_avg_w,log_interstitial_space,log_sphericity,convexity,packing)
pairs.panels(cor_var2,
method="pearson",
hist.col = "white",
density=TRUE,
ellipses=FALSE)
dim_pg <- coral_pg %>%
dplyr::select(coral_id, height_pg, length_pg, width_pg, volume_pg) %>%
mutate(height_pg = height_pg*100,
length_pg = length_pg*100,
width_pg = width_pg*100,
volume_pg = volume_pg*10^6)
dim_field <- coral_field %>%
dplyr::select(coral_id, height_field, length_field, width_field, volume_field)
dim_bind <- merge(dim_pg, dim_field, by="coral_id") %>%
drop_na()
par(mfrow=c(3,3))
qqPlot(dim_bind$height_pg, dist="norm")
qqPlot(dim_bind$height_field, dist="norm")
qqPlot(dim_bind$length_pg, dist="norm")
qqPlot(dim_bind$length_field, dist="norm")
qqPlot(dim_bind$width_pg, dist="norm")
qqPlot(dim_bind$width_field, dist="norm")
par(mfrow=c(2,2))
par(mfrow=c(2,2))
qqPlot(dim_bind$volume_pg, dist="norm")
qqPlot(dim_bind$volume_field, dist="norm")
par(mfrow=c(1,1))
#Volume data is not normal, try sqrt transformation
dim_bind$sqrt_volume_pg <- sqrt(dim_bind$volume_pg)
dim_bind$sqrt_volume_field <- sqrt(dim_bind$volume_field)
par(mfrow=c(2,2))
qqPlot(dim_bind$sqrt_volume_pg, dist="norm")
qqPlot(dim_bind$sqrt_volume_field, dist="norm")
par(mfrow=c(1,1))
#sqrt transformed volume for both measurements is normal, move to paired t-test
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
t.test(sqrt_volume_pg,sqrt_volume_field, dim_bind, paired=TRUE, na.rm=TRUE)
t.test(dim_bind$sqrt_volume_pg,dim_bind$sqrt_volume_field, paired=TRUE)
t.test(sqrt_volume_pg~sqrt_volume_field, dim_bind, paired=TRUE)
t.test(dim_bind$sqrt_volume_pg,dim_bind$sqrt_volume_field, paired=TRUE)
library(plyr)
t.test(dim_bind$sqrt_volume_pg,dim_bind$sqrt_volume_field, paired=TRUE)
t.test(dim_bind$height_pg,dim_bind$height_field, paired=TRUE)
t.test(dim_bind$length_pg,dim_bind$length_field, paired=TRUE)
t.test(dim_bind$width_pg,dim_bind$width_field, paired=TRUE)
#Visualize correlations between variables
cor_var <- cafi_coral %>%
dplyr::select(num_cafi,volume_pg,volume_field,SA,avg_w_cm,interstitial_space,sphericity,convexity,packing)
pairs.panels(cor_var,
method="pearson",
hist.col = "white",
density=TRUE,
ellipses=FALSE)
#Use log transformed data
cor_var2 <- cafi_coral %>%
dplyr::select(log_num_cafi,log_volume_pg,log_volume_field,log_SA,log_avg_w,log_interstitial_space,log_sphericity,convexity,packing)
pairs.panels(cor_var2,
method="pearson",
hist.col = "white",
density=TRUE,
ellipses=FALSE,
scale=TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
library(plyr)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
library(plyr)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
library(plyr)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
library(plyr)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
library(plyr)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
coral_pg <- read.csv(here("photogrammetry_data/galvan_journ_datasheet_v2.csv"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
library(plyr)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(psych)
library(knitr)
library(faraway)
library(car)
library(MASS)
library(gridExtra)
library(grid)
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
#Load data
branch_width <- read.csv(here('photogrammetry_data/branchwidth_data.csv'))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set("/Users/journgalvan/Documents/R/EEMB 142 CL/142CL_Lab10") # Set working directory
# Read in data
norway <- read.csv("Norway_1994-2017_dataset.csv")
#Load data
#branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
#coral_pg <- read.csv(here("photogrammetry_data/galvan_journ_datasheet_v2.csv"))
coral_field <- read.csv(here("photogrammetry_data/field_experiment_colony_measurements_moorea_summer2019.csv"))
#Load data
branch_width <- read.csv(here("photogrammetry_data"/"branchwidth_data.csv"))
#Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
