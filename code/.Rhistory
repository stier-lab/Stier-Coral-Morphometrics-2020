)
tab_model(lm_log_invert_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_pg = "software est. volume")
tab_model(lm_invert_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_pg = "Log software est. V"
)
tab_model(lm_log_invert_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_invert_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
pl <- c(
'(Intercept)' = "Intercept",
log_volume_pg = "Log software est. V"
)
tab_model(lm_log_invert_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_invert_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
invert_pg <- ggplot(cafi_coral, aes(x=volume_pg, y=num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert abundance", x= expression(paste("software V cm"^{3})))
lm_invert_pg <- lm(num_cafi~volume_pg, data=cafi_coral)
#Create graphs of log transformed invertebrate abundance
log_invert_pg <- ggplot(cafi_coral, aes(x=log_volume_pg, y=log_num_cafi))+
geom_point()+
geom_smooth(method = lm, se=TRUE)+
theme_classic()+
#facet_wrap(~branch)+
labs(y="log invert. abundance", x= expression(paste("log software est. V cm"^{3})))
#Residuals for log transformed data
lm_log_invert_pg <- lm(log_num_cafi~log_volume_pg, data=cafi_coral)
par(mfrow=c(2,2))
plot(lm_log_invert_pg)
par(mfrow=c(1,1))
fig5 <- ggarrange(invert_field, invert_pg, log_invert_field, log_invert_pg,
ncol = 2, nrow = 2)
annotate_figure(fig5,
top = text_grob("Invert abundance and volume", color = "black", face = "bold", size = 14),
fig.lab = "Figure 5", fig.lab.face = "bold")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_field = "elipsoid volume")
tab_model(lm_invert_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance",
show.se = TRUE)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_invert_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_pg = "software est. volume")
tab_model(lm_invert_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_pg = "Log software est. V"
)
tab_model(lm_log_invert_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
branch_pg <- ggplot(cafi_coral, aes(x=interstitial_space, y=num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert abundance", x= expression(paste("IS cm"^{3})))
lm_branch_pg <- lm(num_cafi~interstitial_space, data=cafi_coral)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
interstitial_space = "IS")
tab_model(lm_branch_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
log_branch_pg <- ggplot(cafi_coral, aes(x=log_interstitial_space, y=log_num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert abundance", x= expression(paste("Log IS cm"^{3})))
lm_log_branch_pg <- lm(log_num_cafi~log_interstitial_space, data=cafi_coral)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_interstitial_space = "Log IS")
tab_model(lm_log_branch_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
branch_field <- ggplot(cafi_coral, aes(x=avg_w_cm, y=num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert abundance", x= "avg_w_cm")
lm_branch_field <- lm(num_cafi~avg_w_cm, data=cafi_coral)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
avg_w_cm = "Avg. branch width")
tab_model(lm_branch_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
log_branch_field <- ggplot(cafi_coral, aes(x=log_avg_w, y=log_num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert abundance", x= "Log avg. width")
lm_log_branch_field <- lm(log_num_cafi~log_avg_w, data=cafi_coral)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_avg_w = "Log avg. width")
tab_model(lm_log_branch_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
fig6 <- ggarrange(branch_field, branch_pg, log_branch_field, log_branch_pg,
ncol = 2, nrow = 2)
annotate_figure(fig6,
top = text_grob("Invert abundance and habitat space", color = "black", face = "bold", size = 14),
fig.lab = "Figure 6", fig.lab.face = "bold")
#lm_test <- lm(num_cafi~avg_w_cm+interstitial_space,data=cafi_coral)
#tab_model(lm_test)
tab_model(lm_branch_field,lm_branch_pg)
names(cafi_coral)
richness_field <- ggplot(cafi_coral, aes(x=volume_field, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= expression(paste("elipsoid V cm"^{3})))
lm_richness_field <- lm(cafi_richness~volume_field, data=cafi_coral)
log_richness_field <- ggplot(cafi_coral, aes(x=log_volume_field, y=log_cafi_richness))+
geom_point()+
geom_smooth(method = lm, se=TRUE)+
theme_classic()+
#facet_wrap(~branch)+
labs(y="log invert. richness", x= expression(paste("log elipsoid V cm"^{3})))
lm_log_richness_field <- lm(log_cafi_richness~log_volume_field, data=cafi_coral)
par(mfrow=c(2,2))
plot(lm_log_richness_field)
par(mfrow=c(1,1))
richness_pg <- ggplot(cafi_coral, aes(x=volume_pg, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= expression(paste("software V cm"^{3})))
lm_richness_pg <- lm(num_cafi~volume_pg, data=cafi_coral)
#Create graphs of log transformed invertebrate richness
log_richness_pg <- ggplot(cafi_coral, aes(x=log_volume_pg, y=log_cafi_richness))+
geom_point()+
geom_smooth(method = lm, se=TRUE)+
theme_classic()+
#facet_wrap(~branch)+
labs(y="log invert. richness", x= expression(paste("log software est. V cm"^{3})))
#Residuals for log transformed data
lm_log_richness_pg <- lm(log_cafi_richness~log_volume_pg, data=cafi_coral)
par(mfrow=c(2,2))
plot(lm_log_richness_pg)
par(mfrow=c(1,1))
fig6 <- ggarrange(richness_field, richness_pg, log_richness_field, log_richness_pg,
ncol = 2, nrow = 2)
annotate_figure(fig6,
top = text_grob("Invert richness and volume", color = "black", face = "bold", size = 14),
fig.lab = "Figure 6", fig.lab.face = "bold")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_field = "elipsoid volume")
tab_model(lm_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness",
show.se = TRUE)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_pg = "software est. volume")
tab_model(lm_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_pg = "Log software est. V"
)
tab_model(lm_log_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
volume_field = "elipsoid volume")
tab_model(lm_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness",
show.se = TRUE)
summary(lm_richness_field)
pl <- c(
'(Intercept)' = "Intercept",
volume_pg = "software est. volume")
tab_model(lm_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
summary(lm_richness_pg)
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
log_volume_pg = "Log software est. V"
)
tab_model(lm_log_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
names(cafi_coral)
richness_pg <- ggplot(cafi_coral, aes(x=volume_pg, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= expression(paste("software V cm"^{3})))
lm_richness_pg <- lm(cafi_richness~volume_pg, data=cafi_coral)
#Create graphs of log transformed invertebrate richness
log_richness_pg <- ggplot(cafi_coral, aes(x=log_volume_pg, y=log_cafi_richness))+
geom_point()+
geom_smooth(method = lm, se=TRUE)+
theme_classic()+
#facet_wrap(~branch)+
labs(y="log invert. richness", x= expression(paste("log software est. V cm"^{3})))
#Residuals for log transformed data
lm_log_richness_pg <- lm(log_cafi_richness~log_volume_pg, data=cafi_coral)
par(mfrow=c(2,2))
plot(lm_log_richness_pg)
par(mfrow=c(1,1))
fig6 <- ggarrange(richness_field, richness_pg, log_richness_field, log_richness_pg,
ncol = 2, nrow = 2)
annotate_figure(fig6,
top = text_grob("Invert richness and volume", color = "black", face = "bold", size = 14),
fig.lab = "Figure 6", fig.lab.face = "bold")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_field = "elipsoid volume")
tab_model(lm_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness",
show.se = TRUE)
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_field = "Log elispoid V"
)
tab_model(lm_log_richness_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
volume_pg = "software est. volume")
tab_model(lm_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_volume_pg = "Log software est. V"
)
tab_model(lm_log_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
volume_pg = "software est. volume")
tab_model(lm_richness_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
summary(lm_richness_pg)
summary(lm_richness_field)
names(cafi_coral)
branch_rich_pg <- ggplot(cafi_coral, aes(x=interstitial_space, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= expression(paste("IS cm"^{3})))
lm_branch_rich_pg <- lm(cafi_richness~interstitial_space, data=cafi_coral)
log_branch_rich_pg <- ggplot(cafi_coral, aes(x=log_interstitial_space, y=log_cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert richness", x= expression(paste("Log IS cm"^{3})))
lm_log_branch_rich_pg <- lm(log_cafi_richness~log_interstitial_space, data=cafi_coral)
branch_rich_pg <- ggplot(cafi_coral, aes(x=interstitial_space, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= expression(paste("IS cm"^{3})))
lm_branch_rich_pg <- lm(cafi_richness~interstitial_space, data=cafi_coral)
log_branch_rich_pg <- ggplot(cafi_coral, aes(x=log_interstitial_space, y=log_cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert richness", x= expression(paste("Log IS cm"^{3})))
lm_log_branch_rich_pg <- lm(log_cafi_richness~log_interstitial_space, data=cafi_coral)
branch_rich_field <- ggplot(cafi_coral, aes(x=avg_w_cm, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= "avg_w_cm")
lm_branch_rich_field <- lm(cafi_richness~avg_w_cm, data=cafi_coral
log_branch_rich_field <- ggplot(cafi_coral, aes(x=log_avg_w, y=log_cafi_richness))+
branch_rich_field <- ggplot(cafi_coral, aes(x=avg_w_cm, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= "avg_w_cm")
lm_branch_rich_field <- lm(cafi_richness~avg_w_cm, data=cafi_coral)
log_branch_rich_field <- ggplot(cafi_coral, aes(x=log_avg_w, y=log_cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert richness", x= "Log avg. width")
lm_log_branch_rich_field <- lm(log_cafi_richness~log_avg_w, data=cafi_coral)
fig8 <- ggarrange(branch_rich_field, branch_rich_pg, log_branch_rich_field, log_branch_rich_pg
ncol = 2, nrow = 2)
branch_rich_field <- ggplot(cafi_coral, aes(x=avg_w_cm, y=cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert richness", x= "avg_w_cm")
lm_branch_rich_field <- lm(cafi_richness~avg_w_cm, data=cafi_coral)
log_branch_rich_field <- ggplot(cafi_coral, aes(x=log_avg_w, y=log_cafi_richness))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert richness", x= "Log avg. width")
lm_log_branch_rich_field <- lm(log_cafi_richness~log_avg_w, data=cafi_coral)
fig8 <- ggarrange(branch_rich_field, branch_rich_pg, log_branch_rich_field, log_branch_rich_pg,
ncol = 2, nrow = 2)
annotate_figure(fig8,
top = text_grob("Invert richness and habitat space", color = "black", face = "bold", size = 14),
fig.lab = "Figure 8", fig.lab.face = "bold")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
interstitial_space = "IS")
tab_model(lm_branch_rich_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_interstitial_space = "Log IS")
tab_model(lm_log_branch_rich_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
avg_w_cm = "Avg. branch width")
tab_model(lm_branch_rich_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_avg_w = "Log avg. width")
tab_model(lm_log_branch_rich_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
log_avg_w = "Log avg. width")
tab_model(lm_log_branch_rich_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
log_interstitial_space = "Log IS")
tab_model(lm_log_branch_rich_pg,
pred.labels = pl,
dv.labels = "Invertebrate richness")
pl <- c(
'(Intercept)' = "Intercept",
log_avg_w = "Log avg. width")
tab_model(lm_log_branch_rich_field,
pred.labels = pl,
dv.labels = "Invertebrate richness")
branch_field <- ggplot(cafi_coral, aes(x=avg_w_cm, y=num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert abundance", x= "avg_w_cm")
lm_branch_field <- lm(num_cafi~avg_w_cm, data=cafi_coral
log_branch_field <- ggplot(cafi_coral, aes(x=log_avg_w, y=log_num_cafi))+
branch_field <- ggplot(cafi_coral, aes(x=avg_w_cm, y=num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="invert abundance", x= "avg_w_cm")
lm_branch_field <- lm(num_cafi~avg_w_cm, data=cafi_coral)
log_branch_field <- ggplot(cafi_coral, aes(x=log_avg_w, y=log_num_cafi))+
geom_point()+
geom_smooth(method=lm, se=TRUE)+
theme_bw()+
labs(y="Log invert abundance", x= "Log avg. width")
lm_log_branch_field <- lm(log_num_cafi~log_avg_w, data=cafi_coral)
fig7 <- ggarrange(branch_field, branch_pg, log_branch_field, log_branch_pg,
ncol = 2, nrow = 2)
annotate_figure(fig7,
top = text_grob("Invert abundance and habitat space", color = "black", face = "bold", size = 14),
fig.lab = "Figure 7", fig.lab.face = "bold")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
interstitial_space = "IS")
tab_model(lm_branch_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_interstitial_space = "Log IS")
tab_model(lm_log_branch_pg,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
avg_w_cm = "Avg. branch width")
tab_model(lm_branch_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
#HTML table from regression results
pl <- c(
'(Intercept)' = "Intercept",
log_avg_w = "Log avg. width")
tab_model(lm_log_branch_field,
pred.labels = pl,
dv.labels = "Invertebrate abundance")
t.test(dim_bind$sqrt_volume_pg,dim_bind$sqrt_volume_field, paired=TRUE)
#ddply(dim_bind, .(sqrt_volume_pg,sqrt_volume_field), summarize,
t.test(dim_bind$height_pg,dim_bind$height_field, paired=TRUE)
t.test(dim_bind$length_pg,dim_bind$length_field, paired=TRUE)
t.test(dim_bind$width_pg,dim_bind$width_field, paired=TRUE)
#Levene's test: response variable, group variable
leveneTest(cafi_coral$log_num_cafi, cafi_coral$branch)
names(cafi_coral)
glm1 <- glm(num_cafi~volume_pg+interstitial_space, family=quasipoisson, data=cafi_coral)
summary(glm1)
glm2 <- glm(num_cafi~volume_field, avg_w_cm, family=quasipoisson, data=cafi_coral)
glm1 <- glm(num_cafi~volume_pg+interstitial_space, family=quasipoisson, data=cafi_coral)
summary(glm1)
glm2 <- glm(num_cafi~volume_field, avg_w_cm, family=quasipoisson, data=cafi_coral)
summary(glm2)
glm1 <- glm(num_cafi~volume_pg+interstitial_space, family=quasipoisson, data=cafi_coral)
summary(glm1)
glm2 <- glm(num_cafi~volume_field+avg_w_cm, family=quasipoisson, data=cafi_coral)
summary(glm2)
glm1 <- glm(num_cafi~volume_pg+interstitial_space+sphericity+packing, family=quasipoisson, data=cafi_coral)
summary(glm1)
glm2 <- glm(num_cafi~volume_field+avg_w_cm, family=quasipoisson, data=cafi_coral)
summary(glm2)
glm1 <- glm(num_cafi~volume_pg+interstitial_space, family=quasipoisson, data=cafi_coral)
summary(glm1)
glm2 <- glm(num_cafi~volume_field+avg_w_cm, family=quasipoisson, data=cafi_coral)
summary(glm2)
