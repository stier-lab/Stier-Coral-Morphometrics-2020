theme(axis.text = element_text(size = 12.5), axis.title = element_text(size = 15),
axis.title.y = element_blank())
#Plot invert richness to software estimated volume
richness_hull <- ggplot(plot_hull_rich, aes(x=max_hull_volume, y=cafi_richness))+
geom_smooth(method=nls, formula = formula1, method.args = list(start = list(a = 1, beta = 1)), se = FALSE, color = "dodgerblue1", fill = "dodgerblue1")+
geom_point(color = "black", pch = 21, fill = "dodgerblue1", size = 3.5, alpha = 0.7)+
geom_ribbon(aes(ymin = lwr, ymax = upr), fill= "dodgerblue1", alpha = 0.2) +
theme_classic()+
scale_y_continuous(limits = c(0,27), breaks = seq(0,25,5)) +
labs(y="CAFI Richness", x= expression(paste("Convex Hull Volume (cm"^{3},")"))) +
theme(axis.text = element_text(size = 12.5), axis.title = element_text(size = 15),
axis.title.y = element_blank())
fig2_raw <- plot_grid(invert_field, invert_pgell, invert_hull, invert_pg,
richness_field, richness_pgell, richness_hull, richness_pg, nrow = 2, ncol = 4, align = "vh", labels = "AUTO")
ggsave(here("code","figures","cr_rev2_fig2.pdf"), fig2_raw, device = "pdf", useDingbats = FALSE, width = 12, height = 5)
ggsave(here("code","figures","cr_rev2_fig2.pdf"), fig2_raw, device = "pdf", useDingbats = FALSE, width = 12.5, height = 5)
#SUPPLEMENTAL FIGURE 1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13)) #x intercept changed to be forced through 0
height <- ggplot(coral_dim, aes(x=height_pg, y=height_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
theme_classic()+
xlim(c(0,max(coral_dim$height_pg + 2))) +
ylim(c(0,max(coral_dim$height_field + 2))) +
labs(y= "Manual Height (cm)", x= "Photogrammetry Height (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#Length
length <- ggplot(coral_dim, aes(x=length_pg, y=length_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
xlim(c(0,max(coral_dim$length_pg + 2))) +
ylim(c(0,max(coral_dim$length_field + 2))) +
theme_classic()+
labs(y= "Manual Length (cm)", x= "Photogrammetry Length (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#Width
width <- ggplot(coral_dim, aes(x=width_pg, y=width_field))+
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
theme_classic()+
xlim(c(0,max(coral_dim$width_pg + 2))) +
ylim(c(0,max(coral_dim$width_field + 2))) +
labs(y= "Manual Width (cm)", x= "Photogrammetry Width (cm)") +
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') + #x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
# ggsave(here("code","figures","precision_comparison.pdf"), fig1, device = "pdf", useDingbats = FALSE, width = 10, height = 7)
fig1
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "top_left")
fig1
?plot_grid
#SUPPLEMENTAL FIGURE 1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black")) + #x intercept changed to be forced through 0
height <- ggplot(coral_dim, aes(x=height_pg, y=height_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
theme_classic()+
xlim(c(0,max(coral_dim$height_pg + 2))) +
ylim(c(0,max(coral_dim$height_field + 2))) +
labs(y= "Manual Height (cm)", x= "Photogrammetry Height (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#SUPPLEMENTAL FIGURE 1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
height <- ggplot(coral_dim, aes(x=height_pg, y=height_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
theme_classic()+
xlim(c(0,max(coral_dim$height_pg + 2))) +
ylim(c(0,max(coral_dim$height_field + 2))) +
labs(y= "Manual Height (cm)", x= "Photogrammetry Height (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#Length
length <- ggplot(coral_dim, aes(x=length_pg, y=length_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
xlim(c(0,max(coral_dim$length_pg + 2))) +
ylim(c(0,max(coral_dim$length_field + 2))) +
theme_classic()+
labs(y= "Manual Length (cm)", x= "Photogrammetry Length (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#Width
width <- ggplot(coral_dim, aes(x=width_pg, y=width_field))+
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
theme_classic()+
xlim(c(0,max(coral_dim$width_pg + 2))) +
ylim(c(0,max(coral_dim$width_field + 2))) +
labs(y= "Manual Width (cm)", x= "Photogrammetry Width (cm)") +
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') + #x intercept changed to be forced through 0
theme(text = element_text(size = 13))
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
# ggsave(here("code","figures","precision_comparison.pdf"), fig1, device = "pdf", useDingbats = FALSE, width = 10, height = 7)
#SUPPLEMENTAL FIGURE 1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
height <- ggplot(coral_dim, aes(x=height_pg, y=height_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
theme_classic()+
xlim(c(0,max(coral_dim$height_pg + 2))) +
ylim(c(0,max(coral_dim$height_field + 2))) +
labs(y= "Manual Height (cm)", x= "Photogrammetry Height (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#Length
length <- ggplot(coral_dim, aes(x=length_pg, y=length_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
xlim(c(0,max(coral_dim$length_pg + 2))) +
ylim(c(0,max(coral_dim$length_field + 2))) +
theme_classic()+
labs(y= "Manual Length (cm)", x= "Photogrammetry Length (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#Width
width <- ggplot(coral_dim, aes(x=width_pg, y=width_field))+
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
theme_classic()+
xlim(c(0,max(coral_dim$width_pg + 2))) +
ylim(c(0,max(coral_dim$width_field + 2))) +
labs(y= "Manual Width (cm)", x= "Photogrammetry Width (cm)") +
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') + #x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
# ggsave(here("code","figures","precision_comparison.pdf"), fig1, device = "pdf", useDingbats = FALSE, width = 10, height = 7)
fig1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
fig1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
fig1
#SUPPLEMENTAL FIGURE 1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
height <- ggplot(coral_dim, aes(x=height_pg, y=height_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
theme_classic()+
xlim(c(0,max(coral_dim$height_pg + 2))) +
ylim(c(0,max(coral_dim$height_field + 2))) +
labs(y= "Manual Height (cm)", x= "Photogrammetry Height (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#Length
length <- ggplot(coral_dim, aes(x=length_pg, y=length_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
xlim(c(0,max(coral_dim$length_pg + 2))) +
ylim(c(0,max(coral_dim$length_field + 2))) +
theme_classic()+
labs(y= "Manual Length (cm)", x= "Photogrammetry Length (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#Width
width <- ggplot(coral_dim, aes(x=width_pg, y=width_field))+
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
theme_classic()+
xlim(c(0,max(coral_dim$width_pg + 2))) +
ylim(c(0,max(coral_dim$width_field + 2))) +
labs(y= "Manual Width (cm)", x= "Photogrammetry Width (cm)") +
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') + #x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
# ggsave(here("code","figures","precision_comparison.pdf"), fig1, device = "pdf", useDingbats = FALSE, width = 10, height = 7)
fig1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
#x intercept changed to be forced through 0
fig1 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
fig1
#SUPPLEMENTAL FIGURE 1
#Volume - Convex Hull vs ellipsoid
ellipsoid_pg <- ggplot(coral_dim, aes(x=ellipsoid_pg, y = volume_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
scale_y_continuous(breaks=seq(0,max(coral_dim$volume_field), by = 5000))+
scale_x_continuous(breaks=seq(0,max(coral_dim$max_hull_volume, na.rm = TRUE)+1500, by = 5000))+
theme_classic()+
labs(y= expression(paste("Ellipsoid Volume - Manual (cm"^{3},")")),
x= expression(paste("Ellipsoid Volume - Photo (cm"^{3},")"))) +
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))  #x intercept changed to be forced through 0
height <- ggplot(coral_dim, aes(x=height_pg, y=height_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
theme_classic()+
xlim(c(0,max(coral_dim$height_pg + 2))) +
ylim(c(0,max(coral_dim$height_field + 2))) +
labs(y= "Manual Height (cm)", x= "Photogrammetry Height (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#Length
length <- ggplot(coral_dim, aes(x=length_pg, y=length_field))+
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') +
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE)+
xlim(c(0,max(coral_dim$length_pg + 2))) +
ylim(c(0,max(coral_dim$length_field + 2))) +
theme_classic()+
labs(y= "Manual Length (cm)", x= "Photogrammetry Length (cm)")+
#x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#Width
width <- ggplot(coral_dim, aes(x=width_pg, y=width_field))+
geom_point(color = "black", size = 4, alpha = 0.7, fill = "coral", pch = 21) +
geom_smooth(method=lm, color = "black", se = FALSE) +
theme_classic()+
xlim(c(0,max(coral_dim$width_pg + 2))) +
ylim(c(0,max(coral_dim$width_field + 2))) +
labs(y= "Manual Width (cm)", x= "Photogrammetry Width (cm)") +
geom_abline(intercept = 0, slope = 1, size = 1, lty = "dashed", color='dodgerblue4') + #x intercept changed to be forced through 0
theme(text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 13, face = "bold"),
axis.text = element_text(size = 13, face = "bold"),
axis.ticks = element_line(color = "black"))
#x intercept changed to be forced through 0
figs2 <- cowplot::plot_grid(length, width, height, ellipsoid_pg, ncol = 2, nrow = 2,
align = "vh", labels = "AUTO")
ggsave(here("code","figures","cr_rev2_figs2.pdf"), figs2, device = "pdf", useDingbats = FALSE, width = 10, height = 7)
figs2
formula1 <- y~x
ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", formula = "formula1", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "bottom",
formula = formula1, parse = TRUE, size = 5) +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", formula = "formula1", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "bottom",
formula = formula1, parse = TRUE, size = 5) +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", formula = "formula1", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "bottom",
formula = formula1, parse = TRUE, size = 5) +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "bottom",
formula = formula1, parse = TRUE, size = 5) +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
ggplot(aug_and_dec, aes(volume_est, prop_growth_man)) +
geom_smooth(method = "lm", formula = "formula1", color = "#edae52", fill = "#edae52", size = 1.5) +
geom_point(size = 3.5, alpha = 0.8, pch = 21, color = "black", fill = "#edae52") +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "bottom",
formula = formula1, parse = TRUE, size = 5, color = "#edae52") +
theme_classic() +
ylim(c(-60,60)) +
labs(x = expression(paste("Ellipsoid Volume (cm"^{3},")")),
y = expression(paste("Percent Growth")))  +
theme(text = element_text(size = 12))
ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "bottom",
formula = formula1, parse = TRUE, size = 5, color = "black") +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
prop_growth_v_vol <- ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "top",
formula = formula1, parse = TRUE, size = 5, color = "black") +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
prop_growth_v_vol <- ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "top",
formula = formula1, parse = TRUE, size = 5, color = "black") +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(aspect.ratio = 1/3, text = element_text(size = 13)) +
facet_wrap(~method, scales  = "free_x")
ggsave(here("code","figures","cr_rev2_figs3.pdf"), prop_growth_v_vol, device = "pdf", useDingbats = FALSE, height = 6, width = 6)
ggsave(here("code","figures","cr_rev2_figs3.pdf"), prop_growth_v_vol, device = "pdf", useDingbats = FALSE, height = 12, width = 6)
ggsave(here("code","figures","cr_rev2_figs3.pdf"), prop_growth_v_vol, device = "pdf", useDingbats = FALSE, height = 12, width = 6)
prop_growth_v_vol <- ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "top",
formula = formula1, parse = TRUE, size = 5, color = "black") +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(text = element_text(size = 13, face = "bold", color = "black"),
axis.ticks = element_line(color = "black")) +
facet_wrap(~method, scales  = "free_x")
ggsave(here("code","figures","cr_rev2_figs3.pdf"), prop_growth_v_vol, device = "pdf", useDingbats = FALSE, height = 12, width = 6)
formula1 <- y~x
prop_growth_v_vol <- ggplot(december_stacked, aes(volume_aug, prop_growth, color = method)) +
geom_point(size = 3.5, alpha = 0.6, pch = 21, color = "black", aes(fill = method)) +
geom_smooth(method = "lm", aes(fill = method), alpha = 0.2) +
stat_poly_eq(aes(label = paste(..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = "top",
formula = formula1, parse = TRUE, size = 5, color = "black") +
theme_classic() +
scale_fill_manual(labels = NULL, values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
scale_color_manual(labels = c("Ellipsoid","Ellipsoid PG", "Convex Hull", "Skeleton"),
values = c("#edae52", "coral", "dodgerblue1", "#5fb2b2"), guide = FALSE) +
labs(x = expression(paste("Initial Volume (cm"^{3},")")),
y = expression(paste("Percent Growth",")")))  +
theme(text = element_text(size = 13, face = "bold", color = "black"),
axis.ticks = element_line(color = "black")) +
facet_wrap(~method, scales  = "free_x")
ggsave(here("code","figures","cr_rev2_figs3.pdf"), prop_growth_v_vol, device = "pdf", useDingbats = FALSE, height = 6, width = 6)
library(here)
source(here("code/source_data_cleanup_2022_11_25.R"))
ellpg_vol_v_growth_prop <- lm(prop_ellipsoid_growth_pg ~ pg_ellipse_aug, data = december_photo)
summary(ellpg_vol_v_growth_prop)
