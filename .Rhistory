install.packages("tidyverse")
install.packages("here")
install.packages("vegan")
knitr::opts_chunk$set(echo = TRUE)
# libraries
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(dplyr)
library(tidyr)
install.packages("tidyverse")
library(vegan)
install.packages("vegan")
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
install.packages(c("askpass", "backports", "blob", "clipr", "curl", "dbplyr", "digest", "dplyr", "ellipsis", "evaluate", "haven", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "knitr", "later", "markdown", "mime", "mongolite", "odbc", "openssl", "pillar", "pkgconfig", "profvis", "progress", "promises", "purrr", "Rcpp", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "shiny", "sparklyr", "sys", "tibble", "tidyr", "tinytex", "xfun", "xml2"))
knitr::opts_chunk$set(echo = TRUE)
library(here)
install.packages("tidyverse")
library(tidyverse)
TA_fly_sheet.2 <- read.table("~/Desktop/$h!t/EEMB 2LL/Fly Paper/TA_fly_sheet-2.xlsx", header=TRUE, quote="\"")
View(TA_fly_sheet.2)
library(readxl)
TA_fly_sheet_2 <- read_excel("Desktop/$h!t/EEMB 2LL/Fly Paper/TA_fly_sheet-2.xlsx")
View(TA_fly_sheet_2)
sample(1:22,5)
sample(1:50,5)
#create a vector
x <- c(2,6,10,9,7)
#find mean
result.mean <- mean(x)
print(result.mean)
#create a vector
#random sample
sample(1:50,5)
#create a vector
y <- c(12,6,16,7,16)
#find mean for field 1
result.mean <- mean(y)
print(result.mean)
#random mean for field 1 is 11.4
#random mean for field 2 is 6.8
#haphazard mean for field 1
z <- c(11,15,6,7,18)
result.mean <- mean(z)
print(result.mean)
#haphazard mean for field 2
a <- c(14,9,11,12,12)
result.mean <- mean(a)
print(result.mean)
#haphazard mean for field 1 is 11.4
which(git)
which(git)
create.project('MyNewProject')
ls()
library(swirl)
library(tidyverse)
install.packages("tidyverse")
install.packages("swirl")
library("swirl")
library(swirl)
install.packages('rmarkdown')
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = 'C:/Users/Journ/Desktop/lab2')
bat_tongues <- read.csv(“battongues.csv”)
bat_tongues <- read.csv(battongues.csv)
bat_tongues <- read.csv("battongues.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = 'C:/Users/Journ/Desktop/lab2')
bat_tongues <- read.csv("battongues.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = 'C:/Users/Journ/Documents/lab2')
bat_tongues <- read.csv("battongues.csv")
clc()
getwd()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/journgalvan/Desktop/Biometry/Lab 2 Files)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/journgalvan/Desktop/Biometry/Lab 2 Files')
knitr::opts_chunk$set(echo = TRUE) #show code in .html file
knitr::opts_knit$set(root.dir = '/Users/journgalvan/Desktop/Biometry/Lab 2 Files') #set working directory
bat_tongues <- read.csv(battonges.csv)
bat_tongues <- read.csv(battongues.csv)
knitr::opts_chunk$set(echo = TRUE) #show code in .html file
knitr::opts_knit$set(root.dir = '/Users/journgalvan/Desktop/Biometry/Lab 2 Files') #set working directory
bat_tongues <- read.csv(battongues.csv)
getwd()
bat_tongues <- read.csv("battongues.csv")
bat_copy <- bat_tongues #copy dataframe
names(bat_copy)
?names
bat_copy
names(bat_copy) <- c("spp", "palate", "tongue") names(bat_copy)
names(bat_copy) <- c("spp", "palate", "tongue")
names(bat_copy)
mean(bat_copy$tongue)
summary(bat_copy$tongue)
knitr::opts_chunk$set(echo = TRUE) #show code in .html file
knitr::opts_knit$set(root.dir = '/Users/journgalvan/Desktop/Biometry/Lab 2 Files') #set working directory
bat_tongues <- read.csv("battongues.csv")
bat_copy <- bat_tongues #copy dataframe
names(bat_copy) #will return a character vector of column (i.e. variable) names.
names(bat_copy) <- c("spp", "palate", "tongue") #assignes column names within bat_copy
mean(bat_copy$tongue) #mean of "tongue" column within dataframe "bat_copy"
summary(bat_copy$tongue) #summary statistics for variable "tongue"
pnorm(21, mean 0 18, sd = 2, lower.tail = FALSE)
pnorm(21, mean = 18, sd = 2, lower.tail = FALSE)
1 - pnorm(21, mean=18, sd=2) #given parameters, probablilty of being greater than the value
pnorm(21, mean = 18, sd = 2, lower.tail = FALSE) # given parameters, probability of being less than the value
1 - pnorm(21, mean=18, sd=2) #given parameters, probablilty of being greater than the value
# inference about mean given a sample size
pnorm(17, mean = 18, sd = 2/sqrt(9))
lower = 1.375 - qt(0.975,df=7)*0.324/sqrt(8)
lower
upper = 1.375 + qt(0.975,df=7)*0.324/sqrt(8)
upper
Y = c(0.9, 1.4, 1.2, 1.2, 1.3, 2.0, 1.4, 1.6)
t.test(Y)
1 - pnorm(21, mean = 23, sd = 5)
(1 - pnorm(21, mean = 23, sd = 5)) - (1 - pnorm(22, mean = 23, sd =5))
Y = c(0.9, 1.4, 1.2, 1.2, 1.3, 2.0, 1.4, 1.6)
t.test(Y)
lower = 1.375 - qt(0.975,df=7)*0.324/sqrt(8)
lower
Y = c(21, 27, 14, 25, 31, 22, 19)
t.test(Y)
lower = 1.375 - qt(0.9,df=7)*0.324/sqrt(8)
lower = 1.375 - qt(0.995,df=7)*0.324/sqrt(8)
lower
lower = 1.375 - qt(0.975,df=7)*0.324/sqrt(8)
lower
qt?
?qt
?qt
swirl()
library(swirl)
ls()
rm(list=ls())
swirl()
2
quit()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/journgalvan/Desktop/lab4_data") #to set your working directory for the whole document so you don't have to set it in each code chunk
shapiro.test(titanic$Age) #data not normal
titanic <- read.csv("titanic.csv")
shapiro.test(titanic$Age) #data not normal
hist(titanic$Age) #data somewhat normal
boxplot(titanic$Age) #data somewhat normal
# the one-sample t-test. modify the code for your variables!
t.test(titanic$Age, mu=18) # self-check: why mu = 18?
plot(Age~survival, data = titanic)
str(titanic)
plot(Age~Survive, data = titanic)
with(titanic, qqPlot(Age[Survive == "no"], dist="norm")) # did you name titanic.csv "titanic"? if not, change it here
# Q-Q plot separated by group (surviving, yes or no). CHANGE THE VARIABLE NAMES IF NEEDED~!
library(car) # load the package before you use it
with(titanic, qqPlot(Age[Survive == "no"], dist="norm")) # did you name titanic.csv "titanic"? if not, change it here
with(titanic, qqPlot(Age[Survive == "yes"], dist="norm")) # did you name titanic.csv "titanic"? if not, change it here
# Shapiro-Wilk test
with(titanic, shapiro.test(Age[Survive == "yes"]))
# Shapiro-Wilk test
with(titanic, shapiro.test(Age[Survive == "yes"]))
with(titanic, shapiro.test(Age[Survive == "no"]))
# Levene's test: response variable, group variable
leveneTest(titanic$Age, titanic$Survive)
# Shapiro-Wilk test
with(titanic, shapiro.test(Age[Survive == "yes"]))
#first, you have to subset the two groups
lived <- subset(titanic, Survive=="yes")
died <- subset(titanic, Survive=="no")
#now, run the t-test on those groups
t.test(lived$Age, died$Age, var.equal = FALSE) # note that 95% CI and a two-sided hypothesis are default settings, meaning we don't have to set them here!
t.test(lived$Age, died$Age, alternative="less", var.equal = FALSE) # here, we specify the one-sided "less" hypothesis, since two-sided is the default setting and we want to override that.
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/journgalvan/Desktop/Biometry/lab4_data")
shapiro.test(titanic$Age) #data not normal
str(bumpus)
bumpus <- read.csv("bumpus.csv")
dexterity <- read.csv("dexterity.csv")
robustness <- read.csv("robustness.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/Users/journgalvan/Desktop/Biometry/lab4_data")
bumpus <- read.csv("bumpus.csv")
dexterity <- read.csv("dexterity.csv")
robustness <- read.csv("robustness.csv")
bumpus <- read.csv("bumpus.csv")
dexterity <- read.csv("dexterity.csv")
str(bumpus)
boxplot(titanic$Age) #data somewhat normal
hist(bumpus$total_length_mm)
boxplot(bumpus$total_length_mm)
qqPlot(bumpus$total_length_mm)
qqPlot(titanic$Age) #data somewhat normal
shapiro.test(bumpus$total_length_mm)
shapiro.test(titanic$Age) #data not normal
7.771e-07
mu <- mean(bumpus$total_length_mm)
mu
mean <- mean(bumpus$total_length_mm)
mean
t.test(bumpus$total_length_mm, mu=mean)
str(bumpus)
plot(total_length_mm~survival, data = bumpus)
# Q-Q plot seperated by group (surviving, yes or no)
with(bumpus, qqPlot(total_length_mm[survival == "no"]))
with(bumpus, qqPlot(total_length_mm[survival == "yes"]))
library(swirl)
install.packages(c("askpass", "backports", "BH", "bit", "broom", "caTools", "cli", "curl", "DBI", "dbplyr", "digest", "fansi", "forcats", "ggplot2", "glue", "hms", "htmltools", "httpuv", "jsonlite", "knitr", "later", "lattice", "lifecycle", "lubridate", "markdown", "MASS", "Matrix", "mime", "modelr", "mongolite", "nlme", "openssl", "pillar", "PKI", "plyr", "prettyunits", "profvis", "promises", "R6", "Rcpp", "RCurl", "reshape2", "rJava", "RJDBC", "RJSONIO", "rlang", "rmarkdown", "rsconnect", "rstudioapi", "scales", "selectr", "stringi", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
install.packages("tidyverse")
install.packages("hrbrthemes")
# Load libraries
library(here)
library(tidyverse)
# Load libraries
library(here)
library(tidyverse)
install.packages("dplyr")
install.packages("tidyverse")
# Load libraries
library(here)
library(tidyverse)
install.packages
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
install.packages
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(tidyverse)
# Load libraries
library(here)
library(tidyverse)
install.packages(c("Rcpp", "tidyverse"))
install.packages(c("Rcpp", "tidyverse"))
install.packages(c("Rcpp", "tidyverse"))
install.packages(c("Rcpp", "tidyverse"))
install.packages(c("Rcpp", "tidyverse"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(vegan)
install.packages(vegan)
install.packages("vegan")
# Load libraries
library(here)
#library(tidyverse)
library(vegan)
# Load libraries
library(here)
#library(tidyverse)
#library(vegan)
library(reshape)
# Load libraries
library(here)
#library(tidyverse)
#library(vegan)
#library(reshape)
library(ggplot2)
# Load libraries
library(here)
#library(tidyverse)
#library(vegan)
#library(reshape)
#library(ggplot2)
library(hrbrthemes)
# Load libraries
library(here)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library("tidyverse")
install.packages(c("askpass", "backports", "bit", "broom", "caTools", "curl", "dbplyr", "digest", "fansi", "glue", "hms", "htmltools", "httpuv", "jsonlite", "later", "lattice", "lubridate", "markdown", "MASS", "Matrix", "mime", "mongolite", "nlme", "openssl", "PKI", "plyr", "profvis", "promises", "Rcpp", "RCurl", "reshape2", "rJava", "RJSONIO", "rlang", "stringi", "sys", "tibble", "tidyr", "tidyselect", "vctrs", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(here)
library(tidyverse)
install.packages("dplyr")
library(dplyr)
library(tidyverse)
# Load libraries
library(here)
library(tidyverse)
# Load libraries
library(here)
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = FALSE)
library(here)
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
# Load data
branch_width <- read.csv(here("code/photogrammetry_data/branchwidth_data.csv"))
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
install.packages("here")
install.packages("here")
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
here()
set_here()
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
dr_here()
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
here()
set_here()
set_here("/Users/journgalvan/Stier-Coral-Morphometrics-2020")
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
led_here()
dr_here()
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
getwd()
setwd("/Users/journgalvan/Stier-Coral-Morphometrics-2020/")
getwd()
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
dr_here()
getwd()
here()
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
coral_pg <- read.csv(here("photogrammetry_data/galvan_journ_datasheet_v2.csv"))
here::here()
here()
knitr::opts_chunk$set(echo = FALSE)
#Code referenced from lines 83-125 in "Coral Condition Data Preliminary Analysis - Stier Lab Moorea Summer 2019" Author: Joseph Curtis
# Load libraries
library(here)
library(tidyverse)
library(vegan)
library(reshape)
library(ggplot2)
library(ggpubr)
library(zoo)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
# Load data
branch_width <- read.csv(here("photogrammetry_data/branchwidth_data.csv"))
here()
set_here()
here()
